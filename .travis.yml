sudo: required
services:
  - docker
language: python

env:
  global:
    - IMAGE_USER=praekeltfoundation
    - REGISTRY_USER=praekeltorgdeploy
    - secure: "lxWC5m1RcS67wtynQv2GgLSI6kyPbvQUH0Nyap3nBmPjHt0pBYNVXH2z2ZxZhQVhpCBiO7zA8AfQOEjsjTjwEQX7MmElofVjf85z5sOYU1JwgR4hCR/uVI5Tcf/s6GaHMBDzNG1kGe55mAlcD7NKz8HlejpPbez5bcJglAqG2tDtK35EIbTDP9veZegmUgWndQV/6UPH/iCa4npnev+Ey9JxjDiPy19kgch9T0awkLz7OBr39g+sf3TaSUQu8GzXcxYAZOQ6tBEKOFrcZvOEh1uyspKUzzVD01FxrMD4gJ9tXfm2suST1CBkhV5+JlGH61/3nJz7hydZTGOVep4LKjfGLkszQn4wZnns0BTbQXNAopekmT8Li7tE7C/4Gl2g/+sZ34jVmaOX2AL5+qnOjwatUGwQDiRgO1r23XVgsWk1FfQ2XYTokAKJaP0c2r/8XB50R3EV5u1nboGsZLrPS8zDfBYLBiWtZl4Eq3Kg879KRbER3Uv9j6GuhDMMljqemSW2Sxz5KxiJ/Fcsl8Ybue4Ex2kvYAOuthwul8ssbQ8nXOYLjMdoR4ts9UA76AoG5gSlM7akTuiuQXYxrdqi8Q0VPBoEZ54PmXC5I/69+0qYqZR0aWnaKqwvxMCbhCb45mwV23U7nBlimqWUpX+mquJ0SdN9LvtDK5M70BYs5Vw="
  matrix:
    - COMPONENT=control-interface-service TEST_ARGS='--beat'                                DATABASE_ENV_NAME=SEED_CONTROL_INTERFACE_SERVICE_DATABASE CELERY_WORKER_QUEUE=mediumpriority,priority,metrics,seed_control_interface_service
    - COMPONENT=message-sender            TEST_ARGS='--worker-metrics --worker-send'
    - COMPONENT=scheduler                 TEST_ARGS='--worker-metrics --worker-send --beat'
    - COMPONENT=stage-based-messaging     TEST_ARGS='--worker-metrics --worker-send'
    - COMPONENT=auth-api                  TEST_ARGS='--no-worker'
    - COMPONENT=control-interface         TEST_ARGS='--no-worker'                           DATABASE_ENV_NAME=SEED_CONTROL_INTERFACE_DATABASE LOGIN_PATH=login LOGIN_TITLE="Seed Control Interface &middot; Login"
    - COMPONENT=identity-store            TEST_ARGS=''                                      DATABASE_ENV_NAME=IDENTITIES_DATABASE CELERY_WORKER_QUEUE=mediumpriority,priority,metrics,seed_identity_store
    - COMPONENT=service-rating            TEST_ARGS=''                                      CELERY_WORKER_QUEUE=seed_service_rating,priority,mediumpriority,metrics,celery

before_script:
  - image="$IMAGE_USER"/seed-"$COMPONENT"
  - version="$(sed -nE 's/\s*seed-'"$COMPONENT"'\s*==\s*([^\s\;]+).*/\1/p' "$COMPONENT"/requirements.txt)"
  - docker pull "$image" || true
script:
  # Build and test Docker image
  - docker build --pull --cache-from "$image" --tag "$image" "$COMPONENT"
  - ./test.sh "$image" $TEST_ARGS
after_script:
  - docker images

before_deploy:
  - pip install docker-ci-deploy==0.2.0
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
deploy:
  provider: script
  script: dcd --tag-version "$version" --tag-semver --tag-latest "$image"
  on:
    branch: master
